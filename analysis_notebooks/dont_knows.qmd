---
title: "Don't know answers"
author: "Thomas Klebel & Eva Kormann"
format: html
---

```{r}
#| output: false
#| echo: false

library(here)
library(tidyverse)
library(patchwork)
library(hrbrthemes)
library(ggforce)
library(ggridges)
library(psych)

knitr::opts_chunk$set(dpi = 400)

# Get var overview including short titles
vars <- here("data", "additional", "var_short_titles.csv")
var_overview <- read_csv(vars)

# Get functions for analysis
functions <- here("R", "analysis.R")
source(functions)

df <- targets::tar_read(recoded_data, store = here("_targets"))

set_factor <- function(df) {
  df %>% 
    mutate(var_group = factor(var_group, levels =
                              c("Open Science",
                                "Reporting and Academic Integrity",
                                "Education",
                                "Institution/Administration")))
}
```

# By year

## Overall

```{r}
var_groups <- var_overview %>% 
  select(var = var_id, var_full, var_group, instruction)

dont_knows_year <- df %>% 
  select(X15:X52, year = X64) %>% 
  pivot_longer(starts_with("X"), names_to = "var") %>% 
  count(year, var, value) %>% 
  group_by(year, var) %>% 
  mutate(perc = n/sum(n)) %>% 
  filter(value == "don't know") %>% 
  group_by(year) %>% 
  mutate(avg_dont_knows = mean(perc)) %>% 
  left_join(var_groups) %>% 
  group_by(year, var_group) %>% 
  mutate(avg_group_dont_knows = mean(perc))
```

```{r}
yearly_change <- dont_knows_year %>% 
  select(year, var, value, perc, var_group) %>% 
  pivot_wider(names_from = year, values_from = perc) %>% 
  mutate(change_2022 = `2022` - `2021`,
         change_2023 = `2023` - `2021`) %>% 
  select(var, response = value, var_group, contains("change")) %>% 
  pivot_longer(contains("change"), names_to = "year", 
               names_pattern = "change_(\\d+)") %>% 
  mutate(negative_change = if_else(value < 0, TRUE, FALSE),
         var = str_replace_all(var, "X", "Q"))
```

```{r yearly-change, fig.width=10, fig.height=2.5}
text_labels <- tribble(
  ~var, ~value, ~var_group, ~label, ~year,
  "Q39", .05,  "Open Science", "Increase in 2022", "2022",
  "Q19", -.06, "Reporting and Academic Integrity", "Decrease in 2023", "2023"
) %>% 
  set_factor()

p_yearly_change <- yearly_change %>% 
  set_factor() %>% 
  ggplot(aes(var, value, colour = year)) +
  geom_hline(yintercept = 0) +
  geom_segment(aes(x = var, y = 0, yend = value), show.legend = FALSE,
               position = position_dodge(width = .25),
               linewidth = 1) +
  geom_text(data = text_labels, aes(label = label, colour = year), 
            show.legend = FALSE, hjust = "left") +
  facet_row(vars(var_group), scales = "free_x", space = "free") +
  scale_y_continuous(labels = function(x) x * 100, 
                     breaks = c(-.08, -.04, 0, .04)) +
  scale_colour_manual(values = c(`2022` = "#b31529", `2023` = "#1065ab")) +
  labs(y = "Change in percentage points\ncompared to 2021", x = NULL) +
  theme(panel.background = element_rect(fill = "white"),
        panel.grid.major.x = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = .5))

print(p_yearly_change)
```

## Across time and by degree

```{r}
dont_knows_degree <- df %>% 
  mutate(has_degree = case_when(X10 == "none (still studying)" ~ FALSE,
                                is.na(X10) ~ NA,
                                TRUE ~ TRUE)) %>% 
  select(X15:X52, year = X64, has_degree) %>% 
  pivot_longer(starts_with("X"), names_to = "var") %>% 
  count(year, has_degree, var, value) %>% 
  group_by(year, has_degree, var) %>% 
  mutate(perc = n/sum(n)) %>% 
  filter(value == "don't know") %>% 
  group_by(year, has_degree) %>% 
  mutate(avg_dont_knows = mean(perc)) %>% 
  left_join(var_groups) %>% 
  group_by(year, has_degree, var_group) %>% 
  mutate(avg_group_dont_knows = mean(perc)) 
```

```{r}
yearly_change_degree <- dont_knows_degree %>% 
  select(year, has_degree, var, value, perc, var_group) %>% 
  pivot_wider(names_from = year, values_from = perc) %>% 
  mutate(change_2022 = `2022` - `2021`,
         change_2023 = `2023` - `2021`) %>% 
  select(has_degree, var, response = value, var_group, contains("change")) %>% 
  pivot_longer(contains("change"), names_to = "year", 
               names_pattern = "change_(\\d+)") %>% 
  mutate(negative_change = if_else(value < 0, TRUE, FALSE),
         var = str_replace_all(var, "X", "Q")) %>% 
  set_factor()
```

```{r yearly-change-w-degree, fig.width=10, fig.height=3}
yearly_change_degree %>% 
  filter(has_degree) %>% 
  ggplot(aes(var, value, colour = year)) +
  geom_hline(yintercept = 0) +
  geom_segment(aes(x = var, y = 0, yend = value), show.legend = TRUE,
               position = position_dodge(width = .25),
               linewidth = 1) +
  facet_row(vars(var_group), scales = "free_x", space = "free") +
  scale_y_continuous(labels = function(x) x * 100, 
                     breaks = seq(-.05, .05, by = .025)) +
  scale_colour_manual(values = c(`2022` = "#b31529", `2023` = "#1065ab")) +
  labs(y = "Change in percentage points\ncompared to 2021", x = NULL,
       title = "Respondents with any type of degree", colour = "Change in") +
  theme(panel.background = element_rect(fill = "white"),
        panel.grid.major.x = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = .5),
        legend.position = "top")
```

```{r yearly-change-wo-degree, fig.width=10.5, fig.height=3.5}
yearly_change_degree %>% 
  filter(!has_degree) %>% 
  ggplot(aes(var, value, colour = year)) +
  geom_hline(yintercept = 0) +
  geom_segment(aes(x = var, y = 0, yend = value), show.legend = TRUE,
               position = position_dodge(width = .25),
               linewidth = 1) +
  facet_row(vars(var_group), scales = "free_x", space = "free") +
  scale_y_continuous(labels = function(x) x * 100, 
                     breaks = c(-.12, -.08, -.04, 0, .04)) +
  scale_colour_manual(values = c(`2022` = "#b31529", `2023` = "#1065ab")) +
  labs(y = "Change in percentage points\ncompared to 2021", x = NULL,
       title = "Respondents without a degree", colour = "Change in") +
  theme(panel.background = element_rect(fill = "white"),
        panel.grid.major.x = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = .5),
        legend.position = "top")
```

## Across time and by institution

```{r}
dont_knows_institution <- df %>% 
  mutate(optima_partner = case_when(X63 == "National" ~ FALSE,
                                is.na(X63) ~ NA,
                                TRUE ~ TRUE)) %>% 
  select(X15:X52, year = X64, optima_partner) %>% 
  pivot_longer(starts_with("X"), names_to = "var") %>% 
  count(year, optima_partner, var, value) %>% 
  group_by(year, optima_partner, var) %>% 
  mutate(perc = n/sum(n)) %>% 
  filter(value == "don't know") %>% 
  group_by(year, optima_partner) %>% 
  mutate(avg_dont_knows = mean(perc)) %>% 
  left_join(var_groups) %>% 
  group_by(year, optima_partner, var_group) %>% 
  mutate(avg_group_dont_knows = mean(perc)) 
```

```{r}
yearly_change_institution <- dont_knows_institution %>% 
  select(year, optima_partner, var, value, perc, var_group) %>% 
  pivot_wider(names_from = year, values_from = perc) %>% 
  mutate(change_2022 = `2022` - `2021`,
         change_2023 = `2023` - `2021`) %>% 
  select(optima_partner, var, response = value, var_group, contains("change")) %>% 
  pivot_longer(contains("change"), names_to = "year", 
               names_pattern = "change_(\\d+)") %>% 
  mutate(negative_change = if_else(value < 0, TRUE, FALSE),
         var = str_replace_all(var, "X", "Q")) %>% 
  set_factor()
```

```{r yearly-change-optima-partner, fig.width=10, fig.height=3}
yearly_change_institution %>% 
  filter(optima_partner) %>% 
  ggplot(aes(var, value, colour = year)) +
  geom_hline(yintercept = 0) +
  geom_segment(aes(x = var, y = 0, yend = value), show.legend = TRUE,
               position = position_dodge(width = .25),
               linewidth = 1) +
  facet_row(vars(var_group), scales = "free_x", space = "free") +
  scale_y_continuous(labels = function(x) x * 100, 
                     breaks = seq(-.05, .05, by = .025)) +
  scale_colour_manual(values = c(`2022` = "#b31529", `2023` = "#1065ab")) +
  labs(y = "Change in percentage points\ncompared to 2021", x = NULL,
       title = "Respondents from OPTIMA partner institutions", colour = "Change in") +
  theme(panel.background = element_rect(fill = "white"),
        panel.grid.major.x = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = .5),
        legend.position = "top")
```

```{r yearly-change-no-optima-partner, fig.width=10.5, fig.height=3.5}
yearly_change_institution %>% 
  filter(!optima_partner) %>% 
  ggplot(aes(var, value, colour = year)) +
  geom_hline(yintercept = 0) +
  geom_segment(aes(x = var, y = 0, yend = value), show.legend = TRUE,
               position = position_dodge(width = .25),
               linewidth = 1) +
  facet_row(vars(var_group), scales = "free_x", space = "free") +
  scale_y_continuous(labels = function(x) x * 100, 
                     breaks = c(-.12, -.08, -.04, 0, .04)) +
  scale_colour_manual(values = c(`2022` = "#b31529", `2023` = "#1065ab")) +
  labs(y = "Change in percentage points\ncompared to 2021", x = NULL,
       title = "Respondents from institutions not within OPTIMA", colour = "Change in") +
  theme(panel.background = element_rect(fill = "white"),
        panel.grid.major.x = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = .5),
        legend.position = "top")
```

## Open Science

```{r}
os <- c("X22", "X38", "X39", "X42", "X43", "X45",
        "X46", "X48", "X49", "X50", "X51")

dont_knows_os <- df %>% 
  select(all_of(os), year = X64) %>% 
  pivot_longer(starts_with("X"), names_to = "var") %>% 
  count(year, var, value) %>% 
  group_by(year, var) %>% 
  mutate(perc = n/sum(n)) %>% 
  filter(value == "don't know") %>% 
  group_by(year) %>% 
  mutate(avg_dont_knows = mean(perc)) %>% 
  group_by(year) %>% 
  mutate(avg_group_dont_knows = mean(perc))
```

```{r}
yearly_change_os <- dont_knows_os %>% 
  select(year, var, value, perc) %>% 
  pivot_wider(names_from = year, values_from = perc) %>% 
  mutate(change_2022 = `2022` - `2021`,
         change_2023 = `2023` - `2021`) %>% 
  select(var, response = value, contains("change")) %>% 
  pivot_longer(contains("change"), names_to = "year", 
               names_pattern = "change_(\\d+)") %>% 
  mutate(negative_change = if_else(value < 0, TRUE, FALSE),
         var = str_replace_all(var, "X", "Q"))
```

```{r yearly-change-os, fig.width = 4, fig.height = 2.5}
text_labels <- tribble(
  ~var, ~value, ~label, ~year,
  "Q39", .05, "Increase in 2022", "2022",
  "Q48", -.06, "Decrease in 2023", "2023")

p_yearly_change_os <- yearly_change_os %>% 
  ggplot(aes(var, value, colour = year)) +
  geom_hline(yintercept = 0) +
  geom_segment(aes(x = var, y = 0, yend = value), show.legend = FALSE,
               position = position_dodge(width = .25),
               linewidth = 1) +
  geom_text(data = text_labels, aes(label = label, colour = year), 
            show.legend = FALSE, hjust = "left", size = 3.4) +
  scale_y_continuous(labels = function(x) x * 100, 
                     breaks = c(-.08, -.04, 0, .04)) +
  scale_colour_manual(values = c(`2022` = "#b31529", `2023` = "#1065ab")) +
  labs(y = "Change in percentage points\ncompared to rates in 2021",
       x = NULL) +
  theme(panel.background = element_rect(fill = "white"),
        panel.grid.major.x = element_blank(),
        axis.text.x = element_text(angle = 90, vjust = .5))

print(p_yearly_change_os)
```

# Across all years

```{r}
dont_knows <- df %>% 
  select(X15:X52) %>% 
  pivot_longer(starts_with("X"), names_to = "var") %>% 
  count(var, value) %>% 
  group_by(var) %>% 
  mutate(perc = n/sum(n)) %>% 
  filter(value == "don't know") %>% 
  ungroup() %>% 
  mutate(avg_dont_knows = mean(perc)) %>% 
  left_join(var_groups) %>% 
  group_by(var_group) %>% 
  mutate(avg_group_dont_knows = mean(perc),
         var = str_replace_all(var, "X", "Q"))
```

```{r overall-comparison, fig.width=10, fig.height=2.5}
# create labels for annotation
text_labels <- tribble(
  ~var, ~perc, ~var_group, ~label,
  "Q46", .22,  "Open Science", "Overall average",
  "Q17", .235, "Reporting and Academic Integrity", "Group average"
) %>% 
  set_factor()

p_overall <- dont_knows %>% 
  set_factor() %>% 
  ggplot(aes(var, perc)) +
  geom_hline(aes(yintercept = avg_dont_knows), color = "#8ec4ca") +
  geom_hline(aes(yintercept = avg_group_dont_knows), linetype = 2, 
             color = "#1065ab") +
  geom_segment(aes(x = var, y = avg_group_dont_knows, yend = perc)) +
  scale_y_continuous(labels = scales::label_percent()) +
  scale_color_manual(values = c( "#1065ab", "#8ec4ca")) +
  facet_row(vars(var_group), scales = "free_x", space = "free") +
  geom_text(data = text_labels, aes(label = label, colour = var),
            show.legend = FALSE, hjust = "left", size = 3.8, nudge_x = .1) +
  theme(panel.background = element_rect(fill = "white"),
    panel.grid.major.x = element_blank(),
    axis.text.x = element_text(angle = 90, vjust = .5)) +
  labs(y = "Share of 'don't know' answers", x = NULL)

print(p_overall)
```

```{r overall-vs-change, fig.width = 10.5, fig.height = 5}

p_overall / p_yearly_change +
  plot_annotation(tag_levels = "A", tag_prefix = "(", tag_suffix = ")") &
  theme(plot.tag.position = c(0, 1.03),
    plot.tag = element_text(size = 10))
```

```{r}
var_overview %>% 
  filter(var_id %in% paste0("X", 15:52)) %>% 
  arrange(var_group, var_id) %>% 
  select(var_group, var_id, var_full) %>% 
  mutate(var_id = str_replace_all(var_id, "X", "Q")) %>% 
  knitr::kable()
```

Across all years, the rate of "don't know" answers is `r scales::percent(unique(dont_knows$avg_dont_knows), .1)`

```{r}
os <- c("X22", "X38", "X39", "X42", "X43", "X45",
        "X46", "X48", "X49", "X50", "X51") 

os_average <- df %>% 
  select(all_of(os)) %>% 
  summarise(across(everything(), ~ mean(. == "don't know", na.rm = TRUE)))
```

Across all years, the rate of "don't know" answers specifically for attitudes towards OS practices (without the question on understanding of the concept of OS) is `r scales::percent(rowMeans(os_average), .1)`.

# Agreement vs. frequency items

```{r}
item_types <- describeBy(dont_knows$perc, dont_knows$instruction, mat = TRUE) %>% 
  select(-c(item, vars))

knitr::kable(item_types)
```

```{r agreement-vs-frequency, fig.width = 2.5, fig.height = 3.5}

ggplot(item_types, aes(group1, mean)) +
  geom_bar(position = "dodge",stat = "identity",
           color = "black", linewidth = 0.5, fill = "#8ec4ca") +
  geom_errorbar(aes(ymin = mean - se, ymax = mean + se),
                width = 0.1) +
  labs(x = "Instruction", y = "Share of don't know answers") +
  scale_y_continuous(labels = scales::label_percent()) +
  theme(panel.grid.major = element_line(color = "grey85"),
        panel.grid.minor = element_line(color = "grey95"),
        panel.background = element_blank(),
        plot.title = element_text(size = 12, hjust = 0.5),
        axis.ticks = element_blank())
```

# Additional Investigations

```{r}

# Calculate number of "don't know" answers
df <- df %>% 
  rowwise() %>% 
  mutate(dontknow = sum(na.omit(c_across(X15:X53)) == "don't know"))


know <- describe(df$dontknow)

corc <- cor(df$duration, df$dontknow, method = "kendall")
```

Participants were able to answer the agreement and frequency questions with "don't know" (39 question in total when including the clarity question). Comparing the frequency with which this answer was chosen between groups might also help to investigate response behaviors more closely. Participants responded to a mean of `r round(know$mean, 2)` questions with "don't know" (*SD* = `r round(know$sd, 2)`), ranging from `r know$min` to `r know$max` such answers. Number of these answers is correlated with total response time with a Kendall correlation coefficient of `r round(corc, 2)`. In general, there seems to be no relationship between response time and number of "don't know" responses. On visual inspection, participants that took quite long also responded less with "don't know", however, these participants generally only make up a small part of the sample (median response time is presented in the figure as the red vertical line).

```{r dontknow_duration}
#| warning: false

ggplot(df, aes(x = duration, y = dontknow)) +
  geom_jitter(alpha = .1) +
  geom_smooth(color = "#1065ab") +
  geom_vline(xintercept = know$median, color = "#b31529") +
  xlim(0, 120) +
  labs(x = "Total response time in minutes",
       y = "Number of \"don't know\" responses") +
  theme_minimal()
```

Differences in academic groups might also be of interest here, since some might be more familiar with the topics of the survey than others.

```{r dontknow_role}
#| warning: false

# Plot number of "don't know" answer by academic groups
ggplot(df, aes(x = dontknow, y = X8)) +
  stat_density_ridges(quantile_lines = TRUE, alpha = 0.7, fill = "#8ec4ca",
                      vline_color = "white") +
  xlim(0, 30) +
  labs(x = "Total number of \"don't know\" answers",
       y = "Academic role") +
  theme(
    panel.background = element_rect(fill = "white"),
    panel.grid.major = element_line(color = "lightgray"),
    panel.grid.minor = element_line(color = "white")
  )
```

In the plot some groups appear to have answered quite rarely with "don't know", mainly university administrators and research staff. Students in their early years of study might also be less familiar with the topic. One notable outlier can be seen in librarians who indicated that they were not able to answer a question the most (however, this is one of the smallest groups among survey respondents).

```{r dontknow_surveys}
#| warning: false

df$X63 <- factor(df$X63,
                 levels = c("National", "LPU", "SumDU", "DonNU", "LutskNTU"))

# Plot number of "don't know" answer by surveys
ggplot(df, aes(x = dontknow, y = X63)) +
  stat_density_ridges(quantile_lines = TRUE, alpha = 0.7, fill = "#9e9ac8",
                      vline_color = "white") +
  xlim(0, 30) +
  labs(x = "Total number of \"don't know\" answers",
       y = "Institutional vs. national surveys") +
  theme(
    panel.background = element_rect(fill = "white"),
    panel.grid.major = element_line(color = "lightgray"),
    panel.grid.minor = element_line(color = "white")
  )
```

```{r dontknow_clarity}
#| warning: false

# Plot number of "don't know" answer by response to clarity question
ggplot(df, aes(x = dontknow, y = X53)) +
  stat_density_ridges(quantile_lines = TRUE, alpha = 0.7, fill = "olivedrab3",
                      vline_color = "white") +
  labs(x = "Total number of \"don't know\" answers",
       y = "Response to clarity question") +
  theme(
    panel.background = element_rect(fill = "white"),
    panel.grid.major = element_line(color = "lightgray"),
    panel.grid.minor = element_line(color = "white")
  )
```

There seems to be only some difference in the distribution of "don't know" responses in relation to how the clarity questions was answered. Participants that declared that the questions were not clear to them still responded to most of them with something else than "don't know" although to a bit lesser extent. The most notable difference in distribution can be observed for those responding with "don't know" to the clarity question which also responded the same way to almost all content questions. However, this is a comparably small group (see section on clarity question).
